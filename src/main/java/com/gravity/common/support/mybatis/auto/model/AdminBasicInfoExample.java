package com.gravity.common.support.mybatis.auto.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AdminBasicInfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public AdminBasicInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andPersonNameIsNull() {
			addCriterion("person_name is null");
			return (Criteria) this;
		}

		public Criteria andPersonNameIsNotNull() {
			addCriterion("person_name is not null");
			return (Criteria) this;
		}

		public Criteria andPersonNameEqualTo(String value) {
			addCriterion("person_name =", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameNotEqualTo(String value) {
			addCriterion("person_name <>", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameGreaterThan(String value) {
			addCriterion("person_name >", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameGreaterThanOrEqualTo(String value) {
			addCriterion("person_name >=", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameLessThan(String value) {
			addCriterion("person_name <", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameLessThanOrEqualTo(String value) {
			addCriterion("person_name <=", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameLike(String value) {
			addCriterion("person_name like", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameNotLike(String value) {
			addCriterion("person_name not like", value, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameIn(List<String> values) {
			addCriterion("person_name in", values, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameNotIn(List<String> values) {
			addCriterion("person_name not in", values, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameBetween(String value1, String value2) {
			addCriterion("person_name between", value1, value2, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonNameNotBetween(String value1, String value2) {
			addCriterion("person_name not between", value1, value2, "personName");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentIsNull() {
			addCriterion("person_department is null");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentIsNotNull() {
			addCriterion("person_department is not null");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentEqualTo(String value) {
			addCriterion("person_department =", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentNotEqualTo(String value) {
			addCriterion("person_department <>", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentGreaterThan(String value) {
			addCriterion("person_department >", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentGreaterThanOrEqualTo(String value) {
			addCriterion("person_department >=", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentLessThan(String value) {
			addCriterion("person_department <", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentLessThanOrEqualTo(String value) {
			addCriterion("person_department <=", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentLike(String value) {
			addCriterion("person_department like", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentNotLike(String value) {
			addCriterion("person_department not like", value, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentIn(List<String> values) {
			addCriterion("person_department in", values, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentNotIn(List<String> values) {
			addCriterion("person_department not in", values, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentBetween(String value1, String value2) {
			addCriterion("person_department between", value1, value2, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andPersonDepartmentNotBetween(String value1, String value2) {
			addCriterion("person_department not between", value1, value2, "personDepartment");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table admin_basic_info
	 * @mbggenerated  Sat Sep 24 10:43:53 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table admin_basic_info
     *
     * @mbggenerated do_not_delete_during_merge Thu Sep 15 15:54:59 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}